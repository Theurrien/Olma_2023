---
title: "Statistische Analyse"
bibliography: references.bib
---

```{r}
#| echo: false
#| warning: false

library(tidyverse)
library(lavaan)
library(haven)
library(gt)
library(lavaanPlot)
library(performance)
library(tidySEM)
library(psych)
library(semPlot)
library(corrplot)
# Import data

OLMA_Start <- read_sav("data_project.sav")

# Data Prep
OLMA_Ready <- OLMA_Start %>% 
  mutate(Bildung = haven::as_factor(Bildung),
         Bildung = case_when(
           Bildung == "Berufsbildung (EBA/EFZ)" ~ "Berufsbildung",
           Bildung == "Hochschule (Universität, ETH, Fachhochschule)" ~ "Hochschule",
           Bildung == "höhere Berufsbildung (Berufs- und höhere Fachprüfung, höhere Fachschule)" ~ "höhere Berufsbildung",
           Bildung == "obligatorische Schule" ~ "Volksschule",
           Bildung == "Ich habe kein Bildungsabschluss" ~ "Ohne",
           Bildung == "Andere" ~ "Volksschule",
           Bildung == 0 ~ "Volksschule",
           TRUE ~ as.character(Bildung)
         ),
         Bildung = factor(Bildung, levels = c("Ohne", "Volksschule", "Gymnasium/Fachmittelschule", "Berufsbildung", "höhere Berufsbildung", "Hochschule", ordered=TRUE))) %>% 
  mutate(
    WIS_1=if_else(WIS_1==3,1,0),
    WIS_2=if_else(WIS_2==1,1,0),
    WIS_3=if_else(WIS_3==4,1,0),
    Antworten=WIS_1+WIS_2+WIS_3,
    Antworten = factor(Antworten, levels=c(0,1,2,3), ordered=TRUE)
  ) %>% 
  mutate(
    CANX_1=8-CANX_1,
    IMO_3=6-IMO_3,
    IMO_4=6-IMO_4,
    Alter = as.numeric(Alter)
    ) %>% 
  select(-c(1:7,40:79))

```

# Strukturgleichungsmodell

Basierend auf Camil [@makranskyCognitiveAffectiveModel2021] und der Annahme, dass das Alter und die Ängstlichkeit vor Computern einen Einfluss auf das Lernen hat, wurde das folgenden Modell aufgestellt.

![](images/Untitled%20-%20Frame%201-01.jpg)

# Überprüfung des Messmodells

Das Messmodell beinhaltet sechs latente Variablen, welche durch 24 manifeste Variablen geschätzt werden.

-   CANX (Computer Anxiety) - Ängstlichkeit vor Computern

-   PRA (Presence) - Präsenz im virtuellen Raum

-   IMO (Intrinsic motivation) - Intrinsische Motivation

-   KBE (Extraneous Cognitive load Interaction) - Kognitive Belastung, Interaktion

-   KBU (Extranous Cognitive load Environment) - Kognitive Belastung, Umgebung

-   WIS (Drei multiple choice Fragen zur Theorie) -

Die Analysen wurden mit dem lavaan Package durchgeführt [@rosseelLavaanPackageStructural2012].

```{r}
#| echo: false
#| warning: false

messmodell_1 <- '
        CANX =~ CANX_1+CANX_2 + CANX_3 + CANX_4
        PRA  =~ PRA_1 + PRA_2 + PRA_3 + PRA_4
        IMO  =~ IMO_1 +IMO_2 + IMO_3 + IMO_4 + IMO_5
        KBE  =~ KBE_1 + KBE_2 + KBE_3 + KBE_4
        KBU  =~ KBU_1 + KBU_2 + KBU_3 + KBU_4
        WIS =~ WIS_1 + WIS_2 + WIS_3
        
'
OLMA_Ready_R <- OLMA_Ready %>% 
  mutate(across(where(is.labelled), as.double))

model_fit1 <- sem(data=OLMA_Ready_R[,6:29], model = messmodell_1, 
                  ordered = c("WIS_1","WIS_2","WIS_3"),
                  estimator="WLSMV")

```

Die Gütekriterien des Messmodels sind in der @tbl-fit_ind_measure aufgeführt und weisen auf eine akzeptable Passung des Models hin [@huCutoffCriteriaFit1999] [^1] (CFI=`r round(fitmeasures(model_fit1, fit.measures = c("CFI")),2)` , GFI=`r round(fitmeasures(model_fit1, fit.measures = c("GFI")),2)`, RMSEA=`r round(fitmeasures(model_fit1, fit.measures = c("RMSEA")),2)`, SRMR=`r round(fitmeasures(model_fit1, fit.measures = c("SRMR")),2)`). Der $\chi^2$-Test ($\chi^2$(`r round(fitmeasures(model_fit1, fit.measures = c("df")),0)`)=`r round(fitmeasures(model_fit1, fit.measures = c("Chisq")),2)`, *p* \<`r round(fitmeasures(model_fit1, fit.measures = c("pvalue")),2)`) fällt signifikant aus, was bei grossen Stichproben allerdings nicht ungewöhnlich ist, da diese direkt in die Teststatitsik miteinfliesst [@eidStatistikUndForschungsmethoden2017].

[^1]: Diese CutOff Werte werden auch in Frage gestellt, da sie beeinflusst werden können von der Stichprobengrössen, Modellcharakteristika wie Non-Normalität, Anzahl der Indikatoren oder der Magnitude der Faktorladungen [@hoyle2023]. Eine mögliche Korrektur bietet Marcoulides und Yuan [-@marcoulidesNewWaysEvaluate2017]. Das vorgestellte Modell bleibt auch hinsichtlich dieser Angaben ein guter Fit.

```{r}
#| echo: false
#| tbl-cap: Gütekriterien des Messmodels
#| cap-location: margin
#| label: tbl-fit_ind_measure

fitmeasures(model_fit1, fit.measures = c("chisq", "df", "pvalue", "RMSEA", "rmsea.ci.lower", "rmsea.ci.upper", "p_RMSEA", "CFI","SRMR", "gfi", "agfi")) %>% 
  enframe(name = "Index", value = "Value") %>%
  spread(Index, Value) %>% 
  select(chisq, df, pvalue, rmsea, rmsea.ci.lower, rmsea.ci.upper, cfi,srmr, gfi, agfi) %>% 
  gt() %>% 
  gt::fmt_number() %>% 
  cols_label(
    rmsea = "Wert",
    rmsea.ci.lower = "CI<sub>low</sub>",
    rmsea.ci.upper = "CI<sub>high</sub>",
    .fn = md
  ) %>% 
   tab_spanner(
    label = "RMSEA ",
    columns = c(rmsea, rmsea.ci.lower, rmsea.ci.upper)
  ) %>% 
  tab_spanner(
    label = "\u03C7\u00B2",
    columns = c(chisq, df, pvalue)
  ) %>% 
  cols_label(
    chisq = "Wert",
    df = "df",
    pvalue = "p"
  ) %>% 
  tab_style(locations = cells_column_labels(columns=c(2:9)),
            style = cell_text(align = "center")) %>% 
  tab_style(locations = cells_column_labels(columns=1),
            style = cell_text(align = "left"))
```

@fig-Messmodell zeigt die latenten Variablen des Messmodells mit den entsprechenden standardisierten Faktorladungen. Alle Ladungen erreichten ein signifikantes Resultat (*p*\<.001).

```{r}
#| echo: false
#| warning: false
#| fig-cap: Darstellung des Messmodells
#| cap-location: margin
#| label: fig-Messmodell


semPaths(model_fit1, "std", style = "lisrel", layout = "tree2", residuals = FALSE, layoutSplit = FALSE,sizeMan = 2, sizeLat = 6, rotation =2,exoCov = FALSE, intercepts = FALSE)
```

Betrachtet man die standardisierten Kovarianzen zwischen den latenten Faktoren des Modells (@fig-Mess_latVar) fällt besonders die zwischen den beiden Skalen KBE und KBU auf. Die Kovarianz beträgt 0.264 (SE=.036, *z* = 7,421, *p* \< .001). Die standardisierte Kovarianz war mit 0,940 bemerkenswert hoch und deutet auf eine starke lineare Beziehung zwischen diesen beiden Konstrukten hin. Alle Kovarianzen sind signifikant (p\<.01) ausser CANX\~\~PRA (p\<.085) und CANX\~\~IMO (p\<.795).

```{r}
#| echo: false
#| warning: false
#| fig-cap: Latente Faktoren und deren Kovarianzen im Messmodell
#| cap-location: margin
#| label: fig-Mess_latVar



semPaths(model_fit1,
         "std", 
         style = "ram", 
         layout = "circle", 
         residuals = FALSE, 
         layoutSplit = TRUE,
         sizeMan = 0,
         sizeLat2 = 8,
         edge.label.cex = 1.5, 
         sizeLat = 10, 
         intercepts = FALSE,
         nodeLabels = c("","","","","","","","","","","","","","","","","","","","","","","","","CANX", "PRA", "IMO", "KBE", "KBU", "WIS")
)
```

## Modifikationsindices

Die Modifikationsindizes (vgl. @tbl-mod_indices) deuten auf mögliche Querladungen zwischen der kognitiven Belastung in VR-Settings (KBU und KBE) und den Items der Skala zur intrinsischen Motivation (IMO_1 und IMO_3) hin. Dies könnte darauf hindeuten, dass bestimmte Items der Skala zur intrinsischen Motivation auch Aspekte der kognitiven Belastung erfassen oder dass es eine gewisse Überschneidung zwischen den Konstrukten gibt. Die vermutete inverse Beziehung zwischen PRA und CANX_1 könnte darauf hindeuten, dass mit zunehmender Präsenz in der VR-Umgebung der Wert von CANX_1 sinkt oder umgekehrt. Aufgrund des sehr guten Modell Fits sind allerdings keine Anpassungen am Modell vorzunehmen, allerdings stellt sich die Frage nach der internen Kongruenz oder Reliabilität der Item-Skalen, besonders der Motivationsskala.

```{r}
#| echo: false
#| tbl-cap: Modifikationsindices, fünf höchste Werte
#| label: tbl-mod_indices
#| tbl-cap-location: margin

modindices(model_fit1, minimum.value = 10, sort. = TRUE, maximum.number = 5) %>% 
  gt() %>% 
  fmt_number() %>% 
  tab_style(locations = cells_column_labels(columns=c(2:7)),
            style = cell_text(align = "center"))
```

### Residuen der Kovarianzen der Items

Die gefundenen Zusammenhänge der Items zeigen sich auch in den Residuen der Kovarianzmatrix (@fig-corr_1).

```{r}
#| echo: false
#| fig-cap-location: margin
#| fig-cap: Korrelationsmatrix der Items
#| label: fig-corr_1
lavResiduals(model_fit1)$cov %>% 
  as.matrix() %>% 
  corrplot(type = "lower", method = "square", tl.col = "black", tl.srt = 90, tl.offset = 0.4, tl.pos = "ld", tl.cex = .5, col.lim = c(-0.3,0.35), is.corr = FALSE)
```

### Items der Skala Intrinsische Motivation

```{r}
#| column: margin
#| echo: false
#| warning: false
#| tbl-cap-location: margin
#| tbl-cap: Faktorladungen IMO-Skala
#| label: tbl-fakt_IMO


omega(OLMA_Ready[,14:18], nfactors = 1)$schmid$sl %>% 
  as.data.frame() %>% 
  mutate(Item=rownames(omega(OLMA_Ready[,14:18], nfactors = 1)$schmid$sl)) %>% 
  select(Item,dplyr::everything(), -"F1*", -"p2") %>% 
  gt() %>% 
  fmt_number() %>% 
  tab_style(locations = cells_column_labels(columns=c(2:4)),
            style = cell_text(align = "center"))
```

Die Items der Skala lauten wie folgt:

1.  Ich arbeite gerne mit dem Thema der Kuhhaltung. (IMO_1)

2.  Es macht Spass Aktivitäten rund um das Thema Kuhhaltung durchzuführen. (IMO_2)

3.  Das Thema der Kuhhaltung ist langweilig. (IMO_3)

4.  Das Thema der Kuhhaltung interessiert mich überhaupt nicht. (IMO_4)

5.  Ich würde das Thema der Kuhhaltung als sehr interessant bezeichnen. (IMO_5)

Diese Items wurden aus dem Englischen übersetzt und an das Thema der Kuhhaltung angepasst. Die Formulierung von IMO_1 ist nicht ideal, da die Wendung "arbeiten mit einem Thema" nicht sehr geläufig ist und wahrscheinlich mit dem Verb "beschäftigen" besser getroffen worden wäre.

Eine Analyse der Itemskala mit der Omega Funktion des psych Packages [@williamrevellePsychProceduresPsychological2023] durchgeführt und zeigen eine akzeptable interne Konsistenz der Skala mit $\omega$=`r round(omega(OLMA_Ready[,14:18], nfactors = 1)$omega_h,2)` und $\alpha$=`r round(omega(OLMA_Ready[,14:18], nfactors = 1)$alpha,2)`. Desweiteren zeigen auch die Faktorladungen, dass das Item 1 sowohl die höchste Ladung, als auch die höchste Komunalität mit dem latenten Faktor der Skala aufweist (siehe @tbl-fakt_IMO). Diesen Analysen folgend macht eine Anpassung des Items IMO_1 keinen Sinn.

# Strukturmodell - Nicht betrachten ;-)

```{r}
#| echo: false
#| warning: false

strukturmodel_1 <- '
        CANX =~ CANX_1+CANX_2 + CANX_3 + CANX_4
        PRA  =~ PRA_1 + PRA_2 + PRA_3 + PRA_4
        IMO  =~ IMO_1 +IMO_2 + IMO_3 + IMO_4 + IMO_5
        KBE  =~ KBE_1 + KBE_2 + KBE_3 + KBE_4
        KBU  =~ KBU_1 + KBU_2 + KBU_3 + KBU_4
        WIS =~ WIS_1 + WIS_2 + WIS_3
        IMO ~ PRA
        KBE ~ PRA
        KBU ~ PRA
        WIS ~ IMO + KBE + KBU + Alter + Bildung
        '


columns_to_factor <- c("CANX_1", "CANX_2", "CANX_3", "CANX_4", 
                       "PRA_1", "PRA_2", "PRA_3", "PRA_4", 
                       "IMO_1", "IMO_2", "IMO_3", "IMO_4", "IMO_5", 
                       "KBE_1", "KBE_2", "KBE_3", "KBE_4", 
                       "KBU_1", "KBU_2", "KBU_3", "KBU_4",
                       "VoWi_Count", "Bildung")

# Convert specified columns to factors
Olma_factor <- OLMA_Ready %>%
  mutate_at(vars(columns_to_factor), ~factor(., ordered = TRUE))

model_fit2 <- sem(data=OLMA_Ready_R, 
                  model = strukturmodel_1, 
                  ordered = c("WIS_1","WIS_2","WIS_3", "Bildung"),
                  estimator="WLSMV")

fitmeasures(model_fit2, fit.measures = c("chisq", "df", "pvalue", "RMSEA", "rmsea.ci.lower", "rmsea.ci.upper", "p_RMSEA", "CFI","SRMR")) %>% 
  enframe(name = "Index", value = "Value") %>%
  spread(Index, Value) %>% 
  select(chisq, df, pvalue, rmsea, rmsea.ci.lower, rmsea.ci.upper, cfi,srmr) %>% 
  gt() %>% 
  gt::fmt_number() %>% 
  cols_label(
    rmsea = "Wert",
    rmsea.ci.lower = "CI<sub>low</sub>",
    rmsea.ci.upper = "CI<sub>high</sub>",
    .fn = md
  ) %>% 
   tab_spanner(
    label = "RMSEA ",
    columns = c(rmsea, rmsea.ci.lower, rmsea.ci.upper)
  ) %>% 
  tab_spanner(
    label = "\u03C7\u00B2",
    columns = c(chisq, df, pvalue)
  ) %>% 
  cols_label(
    chisq = "Wert",
    df = "df",
    pvalue = "p"
  )
```

```{r}
#| echo: false
lavaanPlot(model=model_fit2,graph_options = list(layout = "fdp"))
```

```{r}
#| echo: false
#| include: false

pfad_layout <- get_layout(model_fit2, layout_algorithm = "layout_in_circle")

graph_sem(model=model_fit2, layout=pfad_layout, angle=170)
```
